---
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.id },
    props: post,
  }));
}

const post = Astro.props as CollectionEntry<"blog">;
const { Content } = await render(post);

const formattedPost = {
  title: post.data.title,
  date:
    post.data.pubDate?.toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
    }) || "",
  tags: [] as string[],
  content: "", // Will be rendered by <Content />
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{post.data.title}</title>
    <meta name="description" content={post.data.description} />
  </head>
  <body>
    <article class="blog-post">
      <div class="container">
        {
          post.data.heroImage && (
            <div class="hero-image">
              <img src={post.data.heroImage} alt={post.data.title} />
            </div>
          )
        }

        <div class="post-container">
          <header class="post-header">
            <a href="/blog" class="back-link"> Back to Blog </a>
            <h1>{formattedPost.title}</h1>

            <div class="post-meta">
              <time datetime={post.data.pubDate?.toISOString()}
                >{formattedPost.date}
              </time>
              {
                formattedPost.tags.length > 0 && (
                  <>
                    <span class="separator">â€¢</span>
                    <div class="tags">
                      {formattedPost.tags.map((tag: string) => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                  </>
                )
              }
            </div>
          </header>

          <div class="prose">
            <Content />
          </div>
        </div>
      </div>
    </article>
  </body>
</html>

<style is:global>
  /* Global styles for markdown content */
  :root {
    --prose-width: 65ch;
    --prose-font: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
      Roboto, "Helvetica Neue", Arial, sans-serif;
    --prose-text: #374151;
    --prose-bg: #ffffff;
    --prose-headings: #111827;
    --prose-links: #2563eb;
    --prose-bold: #111827;
    --prose-counters: #6b7280;
    --prose-bullets: #d1d5db;
    --prose-hr: #e5e7eb;
    --prose-quotes: #111827;
    --prose-quote-borders: #e5e7eb;
    --prose-captions: #6b7280;
    --prose-code: #111827;
    --prose-code-bg: #f3f4f6;
    --prose-pre-code: #e5e7eb;
    --prose-pre-bg: #1f2937;
    --prose-pre-border: transparent;
    --prose-th-borders: #d1d5db;
    --prose-td-borders: #e5e7eb;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --prose-text: #d1d5db;
      --prose-bg: #121212;
      --prose-headings: #f3f4f6;
      --prose-links: #3b82f6;
      --prose-bold: #f3f4f6;
      --prose-counters: #9ca3af;
      --prose-bullets: #4b5563;
      --prose-hr: #374151;
      --prose-quotes: #f3f4f6;
      --prose-quote-borders: #4b5563;
      --prose-captions: #9ca3af;
      --prose-code: #f3f4f6;
      --prose-code-bg: #1f2937;
      --prose-pre-code: #e5e7eb;
      --prose-pre-bg: #111827;
      --prose-pre-border: transparent;
      --prose-th-borders: #4b5563;
      --prose-td-borders: #374151;
    }
  }

  body {
    background-color: var(--prose-bg);
    color: var(--prose-text);
    font-family: var(--prose-font);
    line-height: 1.625;
    margin: 0;
    padding: 0;
  }
</style>

<style>
  .blog-post {
    padding-block: var(--s2, 2rem);
  }

  .container {
    max-width: var(--container-width, 1024px);
    margin-inline: auto;
    padding-inline: var(--s1, 1rem);
  }

  .hero-image {
    width: 100%;
    margin-bottom: var(--s2, 2rem);
    aspect-ratio: 2/1;
    overflow: hidden;
    border-radius: var(--radius, 0.5rem);
  }

  .hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    margin-bottom: var(--s1, 1rem);
    padding: var(--s-1, 0.5rem) var(--s1, 1rem);
    font-size: 0.875rem;
    color: inherit;
    text-decoration: none;
    border-radius: var(--radius, 0.5rem);
    background-color: transparent;
    transition: background-color 0.2s;
  }

  .back-link:hover {
    background-color: rgba(var(--foreground-rgb, 0, 0, 0), 0.05);
  }

  .back-link :global(svg) {
    width: 1rem;
    height: 1rem;
    margin-right: 0.5rem;
  }

  .post-container {
    max-width: min(var(--prose-width, 65ch), 100%);
    margin-inline: auto;
  }

  .post-header {
    margin-bottom: var(--s2, 2rem);
  }

  h1 {
    margin-bottom: var(--s1, 1rem);
    font-size: var(--s3, 2rem);
    font-weight: 700;
    letter-spacing: -0.02em;
    line-height: 1.1;
    color: var(--prose-headings);
  }

  @media (min-width: 640px) {
    h1 {
      font-size: var(--s4, 2.5rem);
    }
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: var(--s1, 1rem);
    font-size: 0.875rem;
    color: var(--color-muted, #6b7280);
  }

  .separator {
    display: inline-block;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 500;
    border-radius: var(--radius-full, 9999px);
    background-color: var(--color-secondary-bg, #f3f4f6);
    color: var(--color-secondary-fg, #4b5563);
  }

  /* Prose styles for markdown content */
  .prose {
    color: var(--prose-text);
    max-width: var(--prose-width);
    font-size: 1.125rem;
  }

  .prose :global(h1),
  .prose :global(h2),
  .prose :global(h3),
  .prose :global(h4),
  .prose :global(h5),
  .prose :global(h6) {
    color: var(--prose-headings);
    font-weight: 600;
    line-height: 1.25;
    margin-top: 2.5em;
    margin-bottom: 0.75em;
  }

  .prose :global(h1) {
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8em;
    line-height: 1.1;
  }

  .prose :global(h2) {
    font-size: 1.75em;
    margin-top: 2em;
    margin-bottom: 0.8em;
    line-height: 1.2;
    border-bottom: 1px solid var(--prose-hr);
    padding-bottom: 0.3em;
  }

  .prose :global(h3) {
    font-size: 1.375em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.3;
  }

  .prose :global(h4) {
    font-size: 1.125em;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
  }

  .prose :global(h5) {
    font-size: 1em;
  }

  .prose :global(h6) {
    font-size: 0.875em;
    color: var(--prose-captions);
  }

  .prose :global(a) {
    color: var(--prose-links);
    text-decoration: underline;
    text-underline-offset: 2px;
    font-weight: 500;
  }

  .prose :global(a:hover) {
    text-decoration-thickness: 2px;
  }

  .prose :global(p),
  .prose :global(ul),
  .prose :global(ol),
  .prose :global(blockquote) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    line-height: 1.75;
  }

  .prose :global(ul),
  .prose :global(ol) {
    padding-left: 1.5em;
  }

  .prose :global(ul) {
    list-style-type: disc;
  }

  .prose :global(ol) {
    list-style-type: decimal;
  }

  .prose :global(li) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .prose :global(blockquote) {
    font-style: italic;
    color: var(--prose-quotes);
    border-left: 4px solid var(--prose-quote-borders);
    padding-left: 1.25em;
    margin-left: 0;
  }

  .prose :global(blockquote p:first-of-type::before) {
    content: open-quote;
  }

  .prose :global(blockquote p:last-of-type::after) {
    content: close-quote;
  }

  .prose :global(img) {
    margin-top: 2em;
    margin-bottom: 2em;
    max-width: 100%;
    border-radius: var(--radius, 0.5rem);
  }

  .prose :global(figure) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :global(figcaption) {
    color: var(--prose-captions);
    font-size: 0.875em;
    line-height: 1.4;
    margin-top: 0.5em;
    text-align: center;
  }

  .prose :global(code) {
    color: var(--prose-code);
    background-color: var(--prose-code-bg);
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.875em;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
  }

  .prose :global(pre) {
    background-color: var(--prose-pre-bg);
    border-radius: 0.5em;
    margin: 1.5em 0;
    padding: 1.25em 1.5em;
    overflow-x: auto;
    line-height: 1.6;
    border: 1px solid var(--prose-pre-border);
  }

  .prose :global(pre code) {
    background-color: transparent;
    border: none;
    padding: 0;
    font-size: 0.9em;
    color: var(--prose-pre-code);
    font-weight: 400;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
  }

  .prose :global(hr) {
    border: none;
    border-top: 1px solid var(--prose-hr);
    margin: 3em 0;
  }

  .prose :global(table) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7;
    border-collapse: collapse;
  }

  .prose :global(thead) {
    border-bottom: 2px solid var(--prose-th-borders);
  }

  .prose :global(tbody tr) {
    border-bottom: 1px solid var(--prose-td-borders);
  }

  .prose :global(tbody tr:last-child) {
    border-bottom-width: 0;
  }

  .prose :global(th) {
    color: var(--prose-headings);
    padding: 0.75em 0.75em 0.75em 0;
    font-weight: 600;
    vertical-align: bottom;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 0.875em;
  }

  .prose :global(td) {
    padding: 0.5em 0.75em 0.5em 0;
    vertical-align: top;
  }

  .prose :global(kbd) {
    display: inline-block;
    padding: 0.25em 0.4em;
    font-size: 0.875em;
    font-family: var(--prose-font);
    line-height: 1;
    color: var(--prose-text);
    background-color: var(--prose-code-bg);
    border: 1px solid var(--prose-td-borders);
    border-radius: 0.25em;
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
    white-space: nowrap;
  }

  .prose :global(mark) {
    background-color: #fef3c7;
    color: #92400e;
    padding: 0.1em 0.2em;
    border-radius: 0.15em;
  }

  .prose :global(abbr) {
    cursor: help;
    text-decoration: underline dotted;
  }

  /* Nested list styling */
  .prose :global(ul li ul),
  .prose :global(ul li ol),
  .prose :global(ol li ul),
  .prose :global(ol li ol) {
    margin: 0.5em 0;
  }

  /* Footnotes styling */
  .prose :global(.footnotes) {
    margin-top: 3em;
    font-size: 0.875em;
    color: var(--prose-captions);
  }

  .prose :global(.footnotes::before) {
    content: "";
    display: block;
    width: 20%;
    border-top: 1px solid var(--prose-hr);
    margin-bottom: 1em;
  }

  .prose :global(.footnotes ol li) {
    margin-bottom: 0.5em;
  }

  .prose :global(.footnote-backref) {
    font-size: 0.75em;
  }

  /* Media queries for responsiveness */
  @media (max-width: 640px) {
    .prose {
      font-size: 1rem;
    }

    .prose :global(h1) {
      font-size: 1.875em;
    }

    .prose :global(h2) {
      font-size: 1.5em;
    }

    .prose :global(h3) {
      font-size: 1.25em;
    }
  }
</style>
