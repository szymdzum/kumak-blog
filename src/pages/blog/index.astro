---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import FormattedDate from "@components/FormattedDate.astro";

type BlogPost = CollectionEntry<"blog">;

const posts = (await getCollection("blog")).sort(
  (a: BlogPost, b: BlogPost) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
  <Head />
  <body>
    <Header />
    <main>
      <section class="blog-posts-container">
        <h1 class="page-title">Blog</h1>
        <div class="posts-grid">
          {
            posts.map((post: BlogPost) => (
              <article class="post-card">
                <div class="image-container">
                  {post.data.heroImage ? (
                    <img src={post.data.heroImage} alt="" />
                  ) : (
                    <div class="placeholder-image">
                      <span>{post.data.title.charAt(0)}</span>
                    </div>
                  )}
                </div>
                <div class="card-content">
                  <header class="card-header">
                    <h2 class="card-title">
                      <a href={`/blog/${post.id}/`}>{post.data.title}</a>
                    </h2>
                    <div class="post-meta">
                      <FormattedDate date={post.data.pubDate} />
                    </div>
                  </header>
                  <div class="card-excerpt">
                    <p>{post.data.description}</p>
                  </div>
                  <footer class="card-footer">
                    <a href={`/blog/${post.id}/`} class="read-more-link">
                      Read more
                    </a>
                  </footer>
                </div>
              </article>
            ))
          }
        </div>
      </section>
    </main>
    <Footer />

    <style>
      .blog-posts-container {
        margin: var(--s2, 2rem) auto 0;
        max-width: 64rem;
        padding: 0 1rem;
      }

      .page-title {
        font-size: var(--s2, 2rem);
        margin-bottom: var(--s2, 2rem);
        font-weight: 700;
      }

      .posts-grid {
        display: grid;
        gap: var(--s2, 2rem);
        grid-template-columns: repeat(auto-fill, minmax(min(100%, 22rem), 1fr));
      }

      .post-card {
        display: flex;
        flex-direction: column;
        border: 1px solid var(--color-border, #e2e8f0);
        border-radius: var(--radius, 0.5rem);
        overflow: hidden;
        transition:
          transform 0.2s ease,
          box-shadow 0.2s ease;
        height: 100%;
      }

      .post-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      }

      .image-container {
        aspect-ratio: 16 / 9;
        overflow: hidden;
        position: relative;
      }

      .image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
      }

      .post-card:hover .image-container img {
        transform: scale(1.05);
      }

      .placeholder-image {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(45deg, #3490dc, #6574cd);
        color: white;
      }

      .placeholder-image span {
        font-size: 4rem;
        font-weight: bold;
        text-transform: uppercase;
        opacity: 0.8;
      }

      .card-content {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        padding: var(--s1, 1rem);
      }

      .card-header {
        margin-bottom: var(--s-1, 0.5rem);
      }

      .card-title {
        font-size: var(--s1, 1.25rem);
        font-weight: 600;
        margin-bottom: var(--s-2, 0.25rem);
        line-height: 1.3;
      }

      .card-title a {
        color: inherit;
        text-decoration: none;
      }

      .card-title a:hover {
        text-decoration: underline;
      }

      .post-meta {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: var(--s-1, 0.5rem);
        font-size: 0.875rem;
        color: var(--color-muted, #64748b);
      }

      .card-excerpt {
        flex-grow: 1;
        margin: var(--s-1, 0.5rem) 0;
      }

      .card-excerpt p {
        color: var(--color-muted, #64748b);
        margin: 0;
        line-height: 1.5;
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
      }

      .card-footer {
        margin-top: var(--s1, 1rem);
        display: flex;
        justify-content: flex-end;
      }

      .read-more-link {
        display: inline-flex;
        align-items: center;
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--color-primary, #3490dc);
        text-decoration: none;
        padding: 0.5rem 0.75rem;
        border-radius: var(--radius, 0.25rem);
        background-color: var(--color-primary-bg, rgba(52, 144, 220, 0.1));
        transition: background-color 0.2s ease;
      }

      .read-more-link:hover {
        background-color: var(
          --color-primary-bg-hover,
          rgba(52, 144, 220, 0.2)
        );
      }

      @media (max-width: 640px) {
        .posts-grid {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </body>
</html>
